"""
Django settings for myshop project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*8qp5hm4*k76yum=@bz3%ty#_sltt#5f(4=_+j66x@3c1fn4l!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'shop.apps.ShopConfig',
    'cart.apps.CartConfig',
    'orders.apps.OrdersConfig',
    'payment.apps.PaymentConfig',
    'coupons.apps.CouponsConfig',
    'rosetta',
    'parler',
    'localflavor',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # gettext
    'django.middleware.locale.LocaleMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processors.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'myshop.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = [
    ('en', _('English')),
    ('es', _('Spanish')),
]

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

CART_SESSION_ID = 'cart'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# настроечные параметры Redis
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 1

"""
redis
docker run -it --rm --name redis -p 6379:6379 redis
Redis (расшифровывается как Remote Dictionary Server) – это быстрое хранилище данных типа «ключ‑значение» в 
памяти с открытым исходным кодом.



RabbitMQ
docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:management
RabbitMQ — программный брокер сообщений на основе стандарта AMQP — тиражируемое связующее программное обеспечение, 
ориентированное на обработку сообщений. Создан на основе системы Open Telecom Platform, написан на языке Erlang, 
в качестве движка базы данных для хранения сообщений использует Mnesia.

Установка celery
We have to install gevent using pip :-
pip install gevent
Then to run celery,
celery -A <proj_name> worker -l info -P gevent
celery -A myshop worker -l info -P gevent
Переведено с английского языка.-Celery — это асинхронная очередь задач или очередь заданий с открытым исходным кодом, 
основанная на распределенной передаче сообщений.
"""

# Настроечные параметры Stripe
STRIPE_PUBLISHABLE_KEY = 'pk_test_51NC4idJGZomKalYzatkeRwlJpWvsxpBemFnZcK8d3fjO0M1G2RinmlU1L2e5hTfiPfVHIRKK8xqpbrSShGSYKyQG000Y0yQ024'  # Публикуемый ключ
STRIPE_SECRET_KEY = 'sk_test_51NC4idJGZomKalYzkL2SieiPiI5zwVHRyy9rdiDiftyNeeK339VaEsEvP9zo8INm28UUYVrgIyvH2axl35TAFbFF008zExra4W'  # Секретный ключ
STRIPE_API_VERSION = '2022-08-01'

# endpoint_secret
STRIPE_WEBHOOK_SECRET = 'whsec_1314d7e67d7d41f322757d883a505168c232bf4b99f072e1a945a50fd5909fac'

# https://www.youtube.com/watch?v=jJu8vQH7hLY&ab_channel=Code180

# C:\Users\vladg\Desktop\мусор>
# stripe listen --forward-to localhost:8000/payment/webhook/
# C:\Users\vladg\Desktop\мусор>stripe login

STATIC_ROOT = BASE_DIR / 'static'

# https://www.youtube.com/watch?v=l58EK6zfCJQ&ab_channel=Cipher

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# gettext
# ./manage.py makemessages -l pt

LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

# настройки django-parler
PARLER_LANGUAGES = {
    None: (
        {'code': 'en'},
        {'code': 'es'},
    ),
    'default': {
        'fallback': 'en',
        'hide_untranslated': False,
    }
}
